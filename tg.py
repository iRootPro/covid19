from telegram.ext import Updater, CommandHandler


from parse import get_html, get_total_covid, get_from_countries_covid, get_country
from subscribe import add_member, check_member
from parse_rus import top10_russia
from graph import get_date_and_time


def start(update, context):
    context.bot.send_message(chat_id=update.effective_chat.id,
                             text="–ü—Ä–∏–≤–µ—Ç. –Ø –±–æ—Ç COVID-19. –Ø —Ä–∞—Å—Å–∫–∞–∂—É –æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ –ø–æ –∑–∞–±–æ–ª–µ–≤–∞–µ–º–æ—Å—Ç–∏ –∫–æ—Ä–æ–Ω–æ–≤–∏—Ä—É—Å–æ–º. –ù–∞–±–µ—Ä–∏—Ç–µ / - –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥")


def info(update, context):
    url = 'https://www.worldometers.info/coronavirus/'
    total_cases, total_deaths, total_recovery = get_total_covid(get_html(url))
    text_answer = text = f'<u>–°–∏—Ç—É–∞—Ü–∏—è –≤ –º–∏—Ä–µ:</u>\nü¶† –í—Å–µ–≥–æ –∑–∞–±–æ–ª–µ–≤—à–∏—Ö: {total_cases}\n‚ö∞ –£–º–µ—Ä—à–∏—Ö: {total_deaths}\nüë• –í—ã–∑–¥–æ—Ä–æ–≤–µ–≤—à–∏—Ö: {total_recovery}'
    context.bot.send_message(
        chat_id=update.effective_chat.id, text=text_answer, parse_mode='html')


def top(update, context):
    url = 'https://www.worldometers.info/coronavirus/'
    context.bot.send_message(chat_id=update.effective_chat.id,
                             text=get_from_countries_covid(get_html(url), 10))


def top10(update, context):
    context.bot.send_photo(chat_id=update.effective_chat.id,
                           photo=open('top10.png', 'rb'))


def top20_deaths(update, context):
    context.bot.send_photo(chat_id=update.effective_chat.id,
                           photo=open('deaths.png', 'rb'))


def total(update, context):
    context.bot.send_photo(chat_id=update.effective_chat.id,
                           photo=open('total_cases.png', 'rb'))
    context.bot.send_photo(chat_id=update.effective_chat.id,
                           photo=open('total_deaths.png', 'rb'))
    context.bot.send_photo(chat_id=update.effective_chat.id,
                           photo=open('total_recovered.png', 'rb'))


def russia(update, context):
    case, death, recovered = get_country('Russia')
    text_answer = f'<u>–°–∏—Ç—É–∞—Ü–∏—è –≤ –†–æ—Å—Å–∏–∏:</u>\nü¶† –í—Å–µ–≥–æ –∑–∞–±–æ–ª–µ–≤—à–∏—Ö: {case}\n‚ö∞ –£–º–µ—Ä—à–∏—Ö: {death}\nüë• –í—ã–∑–¥–æ—Ä–æ–≤–µ–≤—à–∏—Ö: {recovered}'
    text_detail_info = f'{top10_russia()}\n –î–∞–Ω–Ω—ã–µ –Ω–∞:{get_date_and_time()}'
    context.bot.send_message(
        chat_id=update.effective_chat.id, text=text_answer, parse_mode='html')
    context.bot.send_message(
        chat_id=update.effective_chat.id, text=text_detail_info, parse_mode='markdown')
    # context.bot.send_photo(chat_id=update.effective_chat.id,
    #                        photo=open('russian_cases.png', 'rb'))


def ukraine(update, context):
    case, death, recovered = get_country('Ukraine')
    text_answer = f'<u>–°–∏—Ç—É–∞—Ü–∏—è –Ω–∞ –£–∫—Ä–∞–∏–Ω–µ:</u>\nü¶† –í—Å–µ–≥–æ –∑–∞–±–æ–ª–µ–≤—à–∏—Ö: {case}\n‚ö∞ –£–º–µ—Ä—à–∏—Ö: {death}\nüë• –í—ã–∑–¥–æ—Ä–æ–≤–µ–≤—à–∏—Ö: {recovered}'
    context.bot.send_message(
        chat_id=update.effective_chat.id, text=text_answer, parse_mode='html')


def subscribe(update, context):
    if check_member(update.effective_chat.id):
        context.bot.send_message(
            chat_id=update.effective_chat.id, text='–í—ã —É–∂–µ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å —Ä–∞–Ω–µ–µ')
    else:
        add_member(update.effective_chat.id)
        context.bot.send_message(
            chat_id=update.effective_chat.id, text='–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É.')


def launch_bot(token_telegram):
    updater = Updater(token=token_telegram, use_context=True)
    start_handler = CommandHandler('start', start)
    info_handler = CommandHandler('info', info)
    top_handler = CommandHandler('top', top)
    top10_handler = CommandHandler('top10', top10)
    top20_deaths_handler = CommandHandler('top20_deaths', top20_deaths)
    total_handler = CommandHandler('total', total)
    russia_handler = CommandHandler('russia', russia)
    ukraine_handler = CommandHandler('ukraine', ukraine)
    subscribe_handler = CommandHandler('subscribe', subscribe)
    dispatcher = updater.dispatcher
    dispatcher.add_handler(top20_deaths_handler)
    dispatcher.add_handler(top10_handler)
    dispatcher.add_handler(top_handler)
    dispatcher.add_handler(info_handler)
    dispatcher.add_handler(start_handler)
    dispatcher.add_handler(total_handler)
    dispatcher.add_handler(russia_handler)
    dispatcher.add_handler(ukraine_handler)
    dispatcher.add_handler(subscribe_handler)
    updater.start_polling()
